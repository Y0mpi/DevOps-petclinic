name: Build, Test and Analyze

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Run Checkstyle
      run: mvn checkstyle:check
      continue-on-error: true

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven

    - name: Build and test with Maven
      run: mvn clean verify

    - name: Setup SonarQube Scanner
      uses: warchant/setup-sonar-scanner@v7

    - name: Run SonarQube Analysis
      run: |
        sonar-scanner \
          -Dsonar.projectKey=petclinic \
          -Dsonar.sources=src/main/java \
          -Dsonar.tests=src/test/java \
          -Dsonar.java.binaries=target \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
          -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
          -Dsonar.host.url=${{ secrets.SONAR_URL }} \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }}

    # - name: Upload test reports
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: surefire-reports
    #     path: target/surefire-reports/

    # - name: Upload JAR artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: petclinic-app
    #     path: target/*.jar

    # - name: Upload Jacoco coverage
    #   if: always()
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: jacoco-report
    #     path: target/site/jacoco/

    # - name: Upload Checkstyle Report
    #   if: always()
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: checkstyle-result
    #     path: target/checkstyle-result.xml

    - name: Build Docker Image
      run: |
        docker build -t petclinic-app .

    - name: Save Docker image as artifact (optional)
      run: |
        docker save petclinic-app | gzip > petclinic-app.tar.gz
      continue-on-error: true

    - name: Upload Docker image (optional)
      uses: actions/upload-artifact@v4
      with:
        name: petclinic-docker
        path: petclinic-app.tar.gz
