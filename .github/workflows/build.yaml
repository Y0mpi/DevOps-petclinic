name: Build, Test and Analyze

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Run Checkstyle
      run: mvn checkstyle:check
      continue-on-error: true

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven

    - name: Build and test with Maven
      run: mvn clean verify

    - name: Setup SonarQube Scanner
      uses: warchant/setup-sonar-scanner@v7

    - name: Run SonarQube Analysis
      run: |
        sonar-scanner \
          -Dsonar.projectKey=petclinic \
          -Dsonar.sources=src/main/java \
          -Dsonar.tests=src/test/java \
          -Dsonar.java.binaries=target \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
          -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml \
          -Dsonar.host.url=${{ secrets.SONAR_URL }} \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }}

    - name: Set Docker image tag
      run: |
        GIT_SHORTHASH=$(git rev-parse --short HEAD)
        BUILD_TIMESTAMP=$(date +'%Y%m%d-%H%M')
        DOCKER_IMAGE_TAG="${BUILD_TIMESTAMP}-${GIT_SHORTHASH}"
        echo "GIT_SHORTHASH=$GIT_SHORTHASH" >> $GITHUB_ENV
        echo "BUILD_TIMESTAMP=$BUILD_TIMESTAMP" >> $GITHUB_ENV
        echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE_TAG" >> $GITHUB_ENV
        echo "Using Docker image tag: $DOCKER_IMAGE_TAG"

    - name: Build Docker Image
      run: |
        docker build -t petclinic-app:${DOCKER_IMAGE_TAG} .

    - name: Save Docker image as artifact (optional)
      run: |
        docker save petclinic-app:${DOCKER_IMAGE_TAG} | gzip > petclinic-app.tar.gz
      continue-on-error: true
